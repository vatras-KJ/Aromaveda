*{box-sizing:border-box}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}a{text-decoration:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}html{font-family:Montserrat,sans-serif;scroll-behavior:smooth;scroll-padding-top:86px;font-size:62.5%}.wrapper{margin:0 auto;width:100%;max-width:1200px}.nav{position:relative;background-color:#fdf7e5;z-index:100}.nav__box{display:flex;align-items:center;justify-content:space-between}.nav__box__logo img{margin:2rem;width:60px}.nav__box__menu__burger{margin:0 1rem;cursor:pointer}.nav__box__menu__burger--icon{padding:1rem;font-size:4rem;border:1px solid transparent;border-radius:8px;pointer-events:none;transition:color .3s,border-color .3s}.nav__box__menu__burger:hover>.nav__box__menu__burger--icon{color:#e2ca82;border-color:#e2ca82}.nav__box__menu__elements{display:none;position:absolute;padding:2rem;left:0;bottom:-100%;width:100%;flex-direction:column;align-items:center;background-color:#fdf7e5;transform:translateY(55%);z-index:-1}.nav__box__menu__elements a{font-size:2.5rem;margin:.5rem;padding:1rem;letter-spacing:1.5px;color:#333;border-radius:8px;transition:background-color .3s}.nav__box__menu__elements a:hover{background-color:#e2ca82}.nav__box__menu__elements--open{display:flex}.cookie{width:100%;background-color:#fdf7e5;position:fixed;bottom:0;box-shadow:0 5px 25px 5px #42445a}.cookie__box{padding:2rem;font-size:1.4rem;opacity:0;transform:translateY(100%);animation:a .5s .5s forwards;text-align:center}.cookie__box--text{color:#333;padding-bottom:2rem;font-family:Montserrat,sans-serif;line-height:25px}.disclaimer__text{padding-top:2rem}.cookie__btn,.disclaimer__btn{padding:1rem 2rem;margin:1rem;background-color:#fdf7e5;border:1px solid #e2ca82;border-radius:12px;box-shadow:0 12px 30px rgba(0,0,0,.2);font-size:1.4rem;letter-spacing:1.2px;text-transform:uppercase}.hide-cookies{display:none}@keyframes a{to{opacity:1;transform:translateY(0)}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
